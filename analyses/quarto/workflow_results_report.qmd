---
title: "Report of the workflow results"
author: "Ellis Franklin"
date: last-modified
date-format: iso 
theme: "flatly"
highlight-style: "breeze"
toc: true
number-sections: true
number-depth: 2
format: 
  html: 
    embed-resources: true
    self-contained: true
    grid: 
      margin-width: 300px
      sidebar-width: 200px
execute: 
  warning: false
reference-location: margin
citation-location: margin
editor: visual
cap-location: margin
---

```{r}
#| include: false

### Load everything : from packages to functions to data

knitr::opts_chunk$set(warning = F, message = F)
options(scipen = 1, digits = 2) 

## Packages required
require(ggplot2)
require(kableExtra)
require(DT)

## Function for specific cluster info retrieval 
retrieve_info_for <- function(number) {
  
  # Cluster id and first quartile associated
  cl_sens <- dnb_sens[number,]
  
  # Number of transcript within cluster
  ntranscript_sens <- lonelyfishing_data$dr_t_c_a_fishing[lonelyfishing_data$dr_t_c_a_fishing$new_clustr %in% as.character(cl_sens$groupby),]$id
  
  # Number of gene symbols within cluster
  ngene_sens <- lonelyfishing_data$dr_t_c_a_fishing[lonelyfishing_data$dr_t_c_a_fishing$new_clustr %in% as.character(cl_sens$groupby),]$external_gene_name
  
  # Driver GO terms
  go_sens <- subset(clustr_fusionres$dr_g_a_fusion, 
                      new_clustr == as.character(cl_sens$groupby) & source == "GO:BP")
  
  # KEGG pathways
  kegg_sens <- subset(clustr_fusionres$dr_g_a_fusion, 
                        new_clustr == as.character(cl_sens$groupby) & source == "KEGG")
  
  # Wikipathways
  wp_sens <- subset(clustr_fusionres$dr_g_a_fusion, 
                      new_clustr == as.character(cl_sens$groupby) & source == "WP")
  
  biglist <- list(cl_sens = cl_sens,
                  ntranscript_sens = ntranscript_sens,
                  ngene_sens = ngene_sens,
                  go_sens = go_sens,
                  kegg_sens = kegg_sens,
                  wp_sens = wp_sens)
  
  return(biglist)
}


## Load Project Addins (R Functions and Packages) ----
devtools::load_all(here::here())

# Load DRomics drcfit object (which holds the background transcript list) 
f <- readRDS(file = here::here("data", "raw-data", "fitres_zebrafish_phtalate.rds"))
# Load DRomics bmdboot object
b <- readRDS(file = here::here("data", "raw-data", "bootres_zebrafish_phtalate_UF_seed3_5000iter.rds"))

# We filter the bmdboot result by selecting only transcripts with a defined confidence interval around the BMD
BMDres_definedCI <- DRomics::bmdfilter(b$res, BMDfilter = "definedCI")

# Retrieve the clustr_enrichres 
clustr_enrichres <- readRDS(here::here("outputs", "old-outputs", "clustr_enrichres_2024_04_19.rds"))

# Get clustr_fusionres
clustr_fusionres <- clustrfusion(
  clustrenrich_data = clustr_enrichres
)

# Load the workflow results 
lonelyfishing_data <- readRDS(here::here("outputs", "old-outputs", "lonely_fishres_2024_04_19.rds"))

# Modify the "ensembl_transcript_id_version" column to "id" for easier merge and integration to DRomics visualisations
names(lonelyfishing_data$dr_t_c_a_fishing)[names(lonelyfishing_data$dr_t_c_a_fishing) == "ensembl_transcript_id_version"] <- "id"


# Combine DRomics info and the workflow info
b_lonely_fishres <- merge(lonelyfishing_data$dr_t_c_a_fishing, BMDres_definedCI,  by = "id")

```



## The results as an interactive table

```{r}
#| echo: false

# Prepare the structure for the summary dataframe
b_lonely_fishres_summary <- data.frame(
  ensembl_transcript_id = b_lonely_fishres$id,
  ensembl_gene_id = b_lonely_fishres$ensembl_gene_id,
  external_gene_name = b_lonely_fishres$external_gene_name,
  NewCluster = b_lonely_fishres$new_clustr,
  Friendliness = b_lonely_fishres$friendliness,
  Term_name = b_lonely_fishres$term_name,
  Source = b_lonely_fishres$source,
  TF = b_lonely_fishres$TF,
  BMD.zSD = as.numeric(b_lonely_fishres$BMD.zSD),
  Trend = b_lonely_fishres$trend
  )

# Round BMD.zSD to the tenth for easier reading
b_lonely_fishres_summary$BMD.zSD <- round(b_lonely_fishres_summary$BMD.zSD, 1) 

# Remove repeated rows
b_lonely_fishres_summary <- unique(b_lonely_fishres_summary)

# Generate the interactive table 
DT::datatable(b_lonely_fishres_summary, options = list(pageLength = 10))
```

\

## The results as sensitivity plots

```{r}
#| label: fig-sensitivityplot1
#| fig-cap: "Sensitivity plot of clusters summarised by BMD first quartile"
#| cap-location: margin
#| echo: false
#| fig-align: "center"
#| fig-asp: 1.5

b_lonely_fishres_no_redund <- subset(b_lonely_fishres, 
                                     select = -c(ensembl_gene_id,
                                                 external_gene_name,
                                                 TF,
                                                 old_clustr,
                                                 friendliness,
                                                 term_name,
                                                 term_id,
                                                 source)
                                     )

b_lonely_fishres_no_redund <- unique(b_lonely_fishres_no_redund)

b_lonely_fishres_no_redund_selected <- b_lonely_fishres_no_redund[!b_lonely_fishres_no_redund$new_clustr %in% c("Friendly", "Lonely"),]

sp <- DRomics::sensitivityplot(
  b_lonely_fishres_no_redund_selected, 
  group = "new_clustr",
  BMDsummary = "first.quartile",
  BMD_log_transfo = TRUE) +
  geom_point(color = "#363636") +
  # geom_hline(yintercept = 3, linetype = "dashed", color = "#FF7256", linewidth = 1) +
  guides(size = guide_legend(title = "nb of transcripts")) +
  ylab("BMD 25th quantiles (μg/L)") +
  xlab("Clusters") +
  theme_light() + 
  theme(plot.title.position = 'plot', 
        plot.title = element_text(hjust = 0.5)) +
  theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
  geom_text(aes(label = paste("   ", sp$data$groupby, "   "), y = 0.9*sp$data$firstquartile), color = "#666362", size = 3)

sp
```

\

```{r}
#| label: fig-sensitivityplot2
#| fig-cap: "Sensitivity plot of clusters summarised by BMD median with the interquartile range as an interval"
#| cap-location: margin
#| echo: false
#| fig-align: "center"
#| fig-asp: 1.5


sp <- DRomics::sensitivityplot(
  b_lonely_fishres_no_redund_selected, 
  group = "new_clustr",
  BMDsummary = "median.and.IQR",
  BMD_log_transfo = TRUE) +
  geom_point(color = "#363636") +
  # geom_hline(yintercept = 3, linetype = "dashed", color = "#FF7256", linewidth = 1) +
  guides(size = guide_legend(title = "nb of transcripts")) +
  ylab("BMD medians and IQR (μg/L)") +
  xlab("Clusters") +
  theme_light() + 
  theme(plot.title.position = 'plot', 
        plot.title = element_text(hjust = 0.5)) +
  theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
  geom_text(aes(label = paste("   ", sp$data$groupby, "   "), y = 0.9*sp$data$firstquartile), color = "#666362", size = 3)

sp
```



## The top 10 most sensitive clusters

```{r}
#| echo: false

# Retrieve the 10 most sensitive clusters and their BMD 25th quantile in order to visualize them in curvesplots and tables

variable <- b_lonely_fishres_no_redund[, "BMD.zSD"]

groupby <- as.factor(b_lonely_fishres_no_redund[, "new_clustr"])

firstquartilefun <- function(x) stats::quantile(x, probs = 0.25, na.rm = TRUE)

dnb <- as.data.frame(table(groupby))

colnames(dnb) <- c("groupby", "nb_of_items")

dnb$firstquartile <- tapply(variable, groupby, firstquartilefun)

dnb_sens <- dnb[order(dnb$firstquartile),]

```

```{r}
#| echo: false

cl_info <- retrieve_info_for(1)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot1
#| fig-cap: "DR curves for the 1st cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table1
#| fig-cap: "Table of the 1st cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```


\

```{r}
#| echo: false

cl_info <- retrieve_info_for(2)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot2
#| fig-cap: "DR curves for the 2nd cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table2
#| fig-cap: "Table of the 2nd cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(3)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot3
#| fig-cap: "DR curves for the 3rd cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table3
#| fig-cap: "Table of the 3rd cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(4)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot4
#| fig-cap: "DR curves for the 4th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table4
#| fig-cap: "Table of the 4th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(5)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot5
#| fig-cap: "DR curves for the 5th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table5
#| fig-cap: "Table of the 5th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(6)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot6
#| fig-cap: "DR curves for the 6th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table6
#| fig-cap: "Table of the 6th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(7)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot7
#| fig-cap: "DR curves for the 7th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table7
#| fig-cap: "Table of the 7th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(8)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot8
#| fig-cap: "DR curves for the 8th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table8
#| fig-cap: "Table of the 8th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(9)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot9
#| fig-cap: "DR curves for the 9th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table9
#| fig-cap: "Table of the 9th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

```{r}
#| echo: false

cl_info <- retrieve_info_for(10)

```

> **Cluster `r cl_info$cl_sens$groupby` - `r length(unique(cl_info$ntranscript_sens))` transcripts (\~ 25% \< `r cl_info$cl_sens$firstquartile` μg/L)**
>
> Driver GO terms : `r paste(unique(cl_info$go_sens$term_name), sep = ",")`
>
> KEGG pathways : `r paste(unique(cl_info$kegg_sens$term_name), sep = ",")`
>
> Wikipathways : `r paste(unique(cl_info$wp_sens$term_name), sep = ",")`

```{r}
#| label: fig-curvesplot10
#| fig-cap: "DR curves for the 10th cluster"
#| echo: false
#| message: false
#| fig-align: "center"
#| fig-asp: 0.618

clustr_df4drplots <- b_lonely_fishres[b_lonely_fishres$new_clustr %in% as.character(cl_info$cl_sens$groupby),]

# Create a curvesplot of cluster transcripts with 'cluster' identification and 'transcript count' in title
cp <- DRomics::curvesplot(clustr_df4drplots, addBMD = TRUE, scaling = TRUE, colorby = "trend",
           npoints= 100, free.y.scales = FALSE,
           xmin = 0.01, xmax = 100, dose_log_transfo = TRUE, line.size = 1, line.alpha = 0.4, point.size = 4, point.alpha = 1) +
  geom_vline(xintercept = unique(f$omicdata$dose), linetype = 2, colour = "#363636", alpha = 0.7, size = 0.3) +
  xlab("Dose (µg/L)") + ylab("Signal")+
  scale_color_manual(values = c("inc" = "#1B9E77", "dec" = "#D95F02", "U" = "#7570B3", "bell" = "#E7298A")) +
  theme_light()

plotly::ggplotly(cp, tooltip =  c("x", "id", "external_gene_name"))

```

```{r}
#| label: fig-table10
#| fig-cap: "Table of the 10th cluster content"
#| echo: false
#| message: false

clustr_df4drplots_redund <- subset(clustr_df4drplots, select = c(id,
                                                                 external_gene_name,
                                                                 BMD.zSD,
                                                                 TF,
                                                                 trend))
clustr_df4drplots_redund <- unique(clustr_df4drplots_redund)

clustr_df4drplots_redund <- clustr_df4drplots_redund[order(clustr_df4drplots_redund$external_gene_name),]

clustr_df4drplots_redund |> 
  knitr::kable(booktabs = TRUE, linesep = "2pt", align = "c", row.names = FALSE)  |> 
  kable_styling(bootstrap_options = "striped", full_width = T) |> 
  kable_styling(font_size = 14, position = "center") |>  
  kable_styling(latex_options = "hold_position") |>  
  column_spec(2, bold = TRUE) |> 
  column_spec(3, color = "white", background = spec_color(clustr_df4drplots_redund$BMD.zSD, alpha = 0.8, begin = 0.2, end = 0.9, option = "viridis", direction = -1, scale_from = c(0, 100)))
```

\

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustrenrich.R
\name{clustrenrich}
\alias{clustrenrich}
\title{Cluster-specific functional enrichment and whole annotation retrieval}
\usage{
clustrenrich(
  clustrfiltr_data,
  dr_genes,
  bg_genes,
  bg_type = c("custom_annotated", "custom", "annotated", "known"),
  sources = c("GO:BP", "KEGG", "WP"),
  organism,
  user_threshold = 0.05,
  correction_method = c("fdr", "g_SCS", "bonferroni", "false_discovery_rate",
    "analytical"),
  exclude_iea = FALSE,
  enrich_size_filtr = TRUE,
  only_highlighted_GO = TRUE,
  min_term_size = NULL,
  max_term_size = NULL,
  ngenes_enrich_filtr = NULL,
  gmt_file_paths = NULL,
  path,
  output_filename,
  overwrite = FALSE
)
}
\arguments{
\item{clustrfiltr_data}{The named \code{list} output from the \code{clustrfiltr()} function.}

\item{dr_genes}{The character vector of deregulated genes that can correspond to the \code{gene_id} column in the output of the \code{getids()} or  \code{getregs()}  function. The \code{gprofiler2::gost()} function handles mixed types of gene IDs and even duplicates by treating them as a single unique occurrence of the identifier, disregarding any duplication.}

\item{bg_genes}{The character vector of background  genes (preferably from the experiment) that typically corresponds to the \code{gene_id} column in the output of the \code{getids()} function.}

\item{bg_type}{The background type, i.e. the statistical domain, that can be one of "annotated", "known", "custom" or "custom_annotated"}

\item{sources}{A vector of data sources to use. Currently, these are set at GO:BP, KEGG and WP. Visit the g:GOSt web tool for the comprehensive list and details on incorporated data sources.}

\item{organism}{Organism ID defined for the chosen sources (e.g. zebrafish = "drerio")}

\item{user_threshold}{Adjusted p-value cutoff for Over-Representation analysis (default at 0.05 in \code{gost()} function)}

\item{correction_method}{P-value adjustment method: one of “gSCS” ,“fdr” and “bonferroni (default set at "fdr")}

\item{exclude_iea}{Option to exclude GO electronic annotations (IEA)}

\item{only_highlighted_GO}{Whether to retain only highlighted driver GO terms in the results. Default is set to TRUE.}

\item{min_term_size}{Minimum size of gene sets to be included in the analysis. If NULL (default), no filtering by size is applied.}

\item{max_term_size}{Maximum size of gene sets to be included in the analysis. If NULL (default), no filtering by size is applied.}

\item{ngenes_enrich_filtr}{Minimum number of genes in a cluster needed for a gene set to be considered enriched. If NULL (default), no filtering by gene count is applied.}

\item{gmt_file_paths}{If provided, these will be uploaded to g:Profiler and included in the enrichment analysis. For guidance on creating and validating GMT files, see the g:Profiler GMT Helper: https://biit.cs.ut.ee/gmt-helper/.}

\item{path}{Destination folder for the output data results.}

\item{output_filename}{Output enrichment result filename.}

\item{overwrite}{If \code{TRUE}, the function overwrites existing output files; otherwise, it reads the existing file. (default is set to \code{FALSE}).}
}
\value{
A named \code{list} holding 4 components, where :
-\code{dr_g_a_enrich} is a dataframe of type \emph{g_a} holding the enrichment results with each row being a combination of gene and biological function annotation
-\code{gostres} is a named list where 'result' contains the data frame with enrichment analysis results, and 'meta' contains metadata necessary for creating a Manhattan plot. This is the original output of a gprofiler2::gost(), with added enrichment ratios in the 'result' dataframe.
-\code{dr_g_a_whole} is a dataframe of type \emph{g_a} holding all the biological function annotations found in the g:profiler database for all the deregulated genes.
-\code{c_simplifylog} is a dataframe tracing the number of biological functions enriched per cluster before and after each filtering step for each source
-\code{params} is a list of the main parameters used
}
\description{
Perform Over-Representation Analysis (ORA) on gene clusters to identify enriched biological functions.
This function wraps around \code{gprofiler2::gost()} and provides flexible options, including:
\itemize{
\item custom background gene lists and background types (e.g. "custom", "custom_annotated")
\item choice of annotation sources (e.g. GO, KEGG, WP)
\item multiple p-value correction methods
\item exclusion of IEA (Electronically Inferred Annotations) for GO terms
}

The function supports a wide range of organisms and annotation sources. Users may rely on standard databases available through g:Profiler and/or extend the analysis by supplying custom GMT annotation file(s).

Users can filter terms/pathways based on gene set size (min_term_size and max_term_size) and the number of genes enriched (ngenes_enrich_filtr). For example, terms with fewer than the minimum required genes or more than the maximum allowed genes are excluded, and terms enriched by fewer than the specified number of genes are filtered out.

Additionally, users can choose to retain only highlighted/driver GO terms to reduce redundancy and focus on key biological functions. A secondary gprofiler2::gost() run with significant = FALSE retrieves annotations for all deregulated genes, which is utilised later in the lonelyfishing() function. Throughout the process, a dataframe tracks the number of biological functions linked to each cluster after each filtering step, categorized by source. All main parameters used are saved in the output for transparency and reproducibility.
}
\examples{
\dontrun{
# This function requires multiple processed objects from previous steps
# See complete workflow in package vignette

example_clustrenrich_res <- clustrenrich(
  clustrfiltr_data = your_clustrfiltr_res,
  dr_genes = your_deregulated_gene_ids,
  bg_genes = your_background_gene_ids,
  bg_type = "custom_annotated",
  sources = c("GO:BP", "KEGG", "WP"),
  organism = "drerio",
  user_threshold = 0.05,
  correction_method = "fdr",
  path = tempdir(),
  output_filename = "clustrenrich_res.rds"
)
}
}
